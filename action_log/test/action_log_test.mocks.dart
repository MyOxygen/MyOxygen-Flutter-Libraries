// Mocks generated by Mockito 5.0.7 from annotations
// in action_log/test/action_log_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:io' as _i2;

import 'package:action_log/src/internal/file_handler.dart' as _i4;
import 'package:flutter/src/widgets/navigator.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeDirectory extends _i1.Fake implements _i2.Directory {}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i3.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(_i3.Route<dynamic>? route, _i3.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPush, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didPop(_i3.Route<dynamic>? route, _i3.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPop, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didRemove(
          _i3.Route<dynamic>? route, _i3.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didRemove, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didReplace(
          {_i3.Route<dynamic>? newRoute, _i3.Route<dynamic>? oldRoute}) =>
      super.noSuchMethod(
          Invocation.method(
              #didReplace, [], {#newRoute: newRoute, #oldRoute: oldRoute}),
          returnValueForMissingStub: null);
  @override
  void didStartUserGesture(
          _i3.Route<dynamic>? route, _i3.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
          Invocation.method(#didStartUserGesture, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didStopUserGesture() =>
      super.noSuchMethod(Invocation.method(#didStopUserGesture, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [FileHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileHandler extends _i1.Mock implements _i4.FileHandler {
  MockFileHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Directory> getCurrentDirectory() =>
      (super.noSuchMethod(Invocation.method(#getCurrentDirectory, []),
              returnValue: Future<_i2.Directory>.value(_FakeDirectory()))
          as _i5.Future<_i2.Directory>);
}
